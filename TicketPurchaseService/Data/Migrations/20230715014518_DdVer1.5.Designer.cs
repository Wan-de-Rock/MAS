// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketPurchaseService.Data;

#nullable disable

namespace TicketPurchaseService.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230715014518_DdVer1.5")]
    partial class DdVer15
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TicketPurchaseService.Models.Aircraft", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<long>("SeatsNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Number");

                    b.HasIndex("AirlineId");

                    b.ToTable("Aircrafts");

                    b.HasData(
                        new
                        {
                            Number = "327senj",
                            AirlineId = 1,
                            SeatsNumber = 300L
                        },
                        new
                        {
                            Number = "weuihf7",
                            AirlineId = 1,
                            SeatsNumber = 100L
                        },
                        new
                        {
                            Number = "398f733",
                            AirlineId = 1,
                            SeatsNumber = 46L
                        },
                        new
                        {
                            Number = "838f823",
                            AirlineId = 3,
                            SeatsNumber = 747L
                        },
                        new
                        {
                            Number = "34984f",
                            AirlineId = 5,
                            SeatsNumber = 611L
                        },
                        new
                        {
                            Number = "34u4ff7",
                            AirlineId = 5,
                            SeatsNumber = 454L
                        },
                        new
                        {
                            Number = "3298f7",
                            AirlineId = 2,
                            SeatsNumber = 78L
                        },
                        new
                        {
                            Number = "3408fj8",
                            AirlineId = 4,
                            SeatsNumber = 300L
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airlines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LOT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wizz Air"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lufthansa"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MAU"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Airfrance"
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Hulveien 57",
                            City = "City1",
                            CountryId = 16,
                            Name = "Airport1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ole Tobias Olsens gate 247",
                            City = "City2",
                            CountryId = 11,
                            Name = "Airport2"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Skjønnhaugveien 129",
                            City = "City3",
                            CountryId = 31,
                            Name = "Airport3"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Gangsåsvegen 10",
                            City = "City4",
                            CountryId = 78,
                            Name = "Airport4"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Einar Røds gate 249",
                            City = "City5",
                            CountryId = 55,
                            Name = "Airport5"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Lars Onsagers veg 227",
                            City = "City6",
                            CountryId = 45,
                            Name = "Airport6"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Tokerudberget 39",
                            City = "City7",
                            CountryId = 87,
                            Name = "Airport7"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Sunnlandsstien 207",
                            City = "City8",
                            CountryId = 89,
                            Name = "Airport8"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Lollandveien 5",
                            City = "City9",
                            CountryId = 15,
                            Name = "Airport9"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Erling Smiths veg 123",
                            City = "City10",
                            CountryId = 2,
                            Name = "Airport0"
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Seat")
                        .HasColumnType("bigint");

                    b.Property<int>("TiketClass")
                        .HasColumnType("int");

                    b.Property<int>("TravelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("TravelId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FlightId = 2,
                            Price = 400m,
                            Seat = 2L,
                            TiketClass = 300,
                            TravelId = 1
                        },
                        new
                        {
                            Id = 2,
                            FlightId = 3,
                            Price = 800m,
                            Seat = 25L,
                            TiketClass = 300,
                            TravelId = 1
                        },
                        new
                        {
                            Id = 3,
                            FlightId = 2,
                            Price = 400m,
                            Seat = 10L,
                            TiketClass = 300,
                            TravelId = 2
                        },
                        new
                        {
                            Id = 4,
                            FlightId = 3,
                            Price = 800m,
                            Seat = 17L,
                            TiketClass = 300,
                            TravelId = 2
                        },
                        new
                        {
                            Id = 5,
                            FlightId = 4,
                            Price = 2200m,
                            Seat = 20L,
                            TiketClass = 100,
                            TravelId = 3
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreeLetterISOCountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwoLetterISOCountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ethiopia",
                            ThreeLetterISOCountryCode = "ETH",
                            TwoLetterISOCountryCode = "ET"
                        },
                        new
                        {
                            Id = 2,
                            Name = "South Africa",
                            ThreeLetterISOCountryCode = "ZAF",
                            TwoLetterISOCountryCode = "ZA"
                        },
                        new
                        {
                            Id = 3,
                            Name = "United Arab Emirates",
                            ThreeLetterISOCountryCode = "ARE",
                            TwoLetterISOCountryCode = "AE"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bahrain",
                            ThreeLetterISOCountryCode = "BHR",
                            TwoLetterISOCountryCode = "BH"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Algeria",
                            ThreeLetterISOCountryCode = "DZA",
                            TwoLetterISOCountryCode = "DZ"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Egypt",
                            ThreeLetterISOCountryCode = "EGY",
                            TwoLetterISOCountryCode = "EG"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Iraq",
                            ThreeLetterISOCountryCode = "IRQ",
                            TwoLetterISOCountryCode = "IQ"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jordan",
                            ThreeLetterISOCountryCode = "JOR",
                            TwoLetterISOCountryCode = "JO"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Kuwait",
                            ThreeLetterISOCountryCode = "KWT",
                            TwoLetterISOCountryCode = "KW"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Lebanon",
                            ThreeLetterISOCountryCode = "LBN",
                            TwoLetterISOCountryCode = "LB"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Libya",
                            ThreeLetterISOCountryCode = "LBY",
                            TwoLetterISOCountryCode = "LY"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Morocco",
                            ThreeLetterISOCountryCode = "MAR",
                            TwoLetterISOCountryCode = "MA"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Oman",
                            ThreeLetterISOCountryCode = "OMN",
                            TwoLetterISOCountryCode = "OM"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Qatar",
                            ThreeLetterISOCountryCode = "QAT",
                            TwoLetterISOCountryCode = "QA"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Saudi Arabia",
                            ThreeLetterISOCountryCode = "SAU",
                            TwoLetterISOCountryCode = "SA"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Syria",
                            ThreeLetterISOCountryCode = "SYR",
                            TwoLetterISOCountryCode = "SY"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Tunisia",
                            ThreeLetterISOCountryCode = "TUN",
                            TwoLetterISOCountryCode = "TN"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Yemen",
                            ThreeLetterISOCountryCode = "YEM",
                            TwoLetterISOCountryCode = "YE"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Chile",
                            ThreeLetterISOCountryCode = "CHL",
                            TwoLetterISOCountryCode = "CL"
                        },
                        new
                        {
                            Id = 20,
                            Name = "India",
                            ThreeLetterISOCountryCode = "IND",
                            TwoLetterISOCountryCode = "IN"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Azerbaijan",
                            ThreeLetterISOCountryCode = "AZE",
                            TwoLetterISOCountryCode = "AZ"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Russia",
                            ThreeLetterISOCountryCode = "RUS",
                            TwoLetterISOCountryCode = "RU"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Belarus",
                            ThreeLetterISOCountryCode = "BLR",
                            TwoLetterISOCountryCode = "BY"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Bulgaria",
                            ThreeLetterISOCountryCode = "BGR",
                            TwoLetterISOCountryCode = "BG"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Nigeria",
                            ThreeLetterISOCountryCode = "NGA",
                            TwoLetterISOCountryCode = "NG"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Bangladesh",
                            ThreeLetterISOCountryCode = "BGD",
                            TwoLetterISOCountryCode = "BD"
                        },
                        new
                        {
                            Id = 27,
                            Name = "China",
                            ThreeLetterISOCountryCode = "CHN",
                            TwoLetterISOCountryCode = "CN"
                        },
                        new
                        {
                            Id = 28,
                            Name = "France",
                            ThreeLetterISOCountryCode = "FRA",
                            TwoLetterISOCountryCode = "FR"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Bosnia & Herzegovina",
                            ThreeLetterISOCountryCode = "BIH",
                            TwoLetterISOCountryCode = "BA"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Spain",
                            ThreeLetterISOCountryCode = "ESP",
                            TwoLetterISOCountryCode = "ES"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Czechia",
                            ThreeLetterISOCountryCode = "CZE",
                            TwoLetterISOCountryCode = "CZ"
                        },
                        new
                        {
                            Id = 32,
                            Name = "United Kingdom",
                            ThreeLetterISOCountryCode = "GBR",
                            TwoLetterISOCountryCode = "GB"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Denmark",
                            ThreeLetterISOCountryCode = "DNK",
                            TwoLetterISOCountryCode = "DK"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Austria",
                            ThreeLetterISOCountryCode = "AUT",
                            TwoLetterISOCountryCode = "AT"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Switzerland",
                            ThreeLetterISOCountryCode = "CHE",
                            TwoLetterISOCountryCode = "CH"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Germany",
                            ThreeLetterISOCountryCode = "DEU",
                            TwoLetterISOCountryCode = "DE"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Liechtenstein",
                            ThreeLetterISOCountryCode = "LIE",
                            TwoLetterISOCountryCode = "LI"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Luxembourg",
                            ThreeLetterISOCountryCode = "LUX",
                            TwoLetterISOCountryCode = "LU"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Maldives",
                            ThreeLetterISOCountryCode = "MDV",
                            TwoLetterISOCountryCode = "MV"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Bhutan",
                            ThreeLetterISOCountryCode = "BTN",
                            TwoLetterISOCountryCode = "BT"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Greece",
                            ThreeLetterISOCountryCode = "GRC",
                            TwoLetterISOCountryCode = "GR"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Caribbean",
                            ThreeLetterISOCountryCode = "",
                            TwoLetterISOCountryCode = "029"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Australia",
                            ThreeLetterISOCountryCode = "AUS",
                            TwoLetterISOCountryCode = "AU"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Belize",
                            ThreeLetterISOCountryCode = "BLZ",
                            TwoLetterISOCountryCode = "BZ"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Canada",
                            ThreeLetterISOCountryCode = "CAN",
                            TwoLetterISOCountryCode = "CA"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Hong Kong SAR",
                            ThreeLetterISOCountryCode = "HKG",
                            TwoLetterISOCountryCode = "HK"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Indonesia",
                            ThreeLetterISOCountryCode = "IDN",
                            TwoLetterISOCountryCode = "ID"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Ireland",
                            ThreeLetterISOCountryCode = "IRL",
                            TwoLetterISOCountryCode = "IE"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Jamaica",
                            ThreeLetterISOCountryCode = "JAM",
                            TwoLetterISOCountryCode = "JM"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Malaysia",
                            ThreeLetterISOCountryCode = "MYS",
                            TwoLetterISOCountryCode = "MY"
                        },
                        new
                        {
                            Id = 51,
                            Name = "New Zealand",
                            ThreeLetterISOCountryCode = "NZL",
                            TwoLetterISOCountryCode = "NZ"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Philippines",
                            ThreeLetterISOCountryCode = "PHL",
                            TwoLetterISOCountryCode = "PH"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Singapore",
                            ThreeLetterISOCountryCode = "SGP",
                            TwoLetterISOCountryCode = "SG"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Trinidad & Tobago",
                            ThreeLetterISOCountryCode = "TTO",
                            TwoLetterISOCountryCode = "TT"
                        },
                        new
                        {
                            Id = 55,
                            Name = "United States",
                            ThreeLetterISOCountryCode = "USA",
                            TwoLetterISOCountryCode = "US"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Zimbabwe",
                            ThreeLetterISOCountryCode = "ZWE",
                            TwoLetterISOCountryCode = "ZW"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Latin America",
                            ThreeLetterISOCountryCode = "",
                            TwoLetterISOCountryCode = "419"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Argentina",
                            ThreeLetterISOCountryCode = "ARG",
                            TwoLetterISOCountryCode = "AR"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Bolivia",
                            ThreeLetterISOCountryCode = "BOL",
                            TwoLetterISOCountryCode = "BO"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Colombia",
                            ThreeLetterISOCountryCode = "COL",
                            TwoLetterISOCountryCode = "CO"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Costa Rica",
                            ThreeLetterISOCountryCode = "CRI",
                            TwoLetterISOCountryCode = "CR"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Cuba",
                            ThreeLetterISOCountryCode = "CUB",
                            TwoLetterISOCountryCode = "CU"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Dominican Republic",
                            ThreeLetterISOCountryCode = "DOM",
                            TwoLetterISOCountryCode = "DO"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Ecuador",
                            ThreeLetterISOCountryCode = "ECU",
                            TwoLetterISOCountryCode = "EC"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Guatemala",
                            ThreeLetterISOCountryCode = "GTM",
                            TwoLetterISOCountryCode = "GT"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Honduras",
                            ThreeLetterISOCountryCode = "HND",
                            TwoLetterISOCountryCode = "HN"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Mexico",
                            ThreeLetterISOCountryCode = "MEX",
                            TwoLetterISOCountryCode = "MX"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Nicaragua",
                            ThreeLetterISOCountryCode = "NIC",
                            TwoLetterISOCountryCode = "NI"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Panama",
                            ThreeLetterISOCountryCode = "PAN",
                            TwoLetterISOCountryCode = "PA"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Peru",
                            ThreeLetterISOCountryCode = "PER",
                            TwoLetterISOCountryCode = "PE"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Puerto Rico",
                            ThreeLetterISOCountryCode = "PRI",
                            TwoLetterISOCountryCode = "PR"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Paraguay",
                            ThreeLetterISOCountryCode = "PRY",
                            TwoLetterISOCountryCode = "PY"
                        },
                        new
                        {
                            Id = 73,
                            Name = "El Salvador",
                            ThreeLetterISOCountryCode = "SLV",
                            TwoLetterISOCountryCode = "SV"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Uruguay",
                            ThreeLetterISOCountryCode = "URY",
                            TwoLetterISOCountryCode = "UY"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Venezuela",
                            ThreeLetterISOCountryCode = "VEN",
                            TwoLetterISOCountryCode = "VE"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Estonia",
                            ThreeLetterISOCountryCode = "EST",
                            TwoLetterISOCountryCode = "EE"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Iran",
                            ThreeLetterISOCountryCode = "IRN",
                            TwoLetterISOCountryCode = "IR"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Senegal",
                            ThreeLetterISOCountryCode = "SEN",
                            TwoLetterISOCountryCode = "SN"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Finland",
                            ThreeLetterISOCountryCode = "FIN",
                            TwoLetterISOCountryCode = "FI"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Faroe Islands",
                            ThreeLetterISOCountryCode = "FRO",
                            TwoLetterISOCountryCode = "FO"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Belgium",
                            ThreeLetterISOCountryCode = "BEL",
                            TwoLetterISOCountryCode = "BE"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Congo (DRC)",
                            ThreeLetterISOCountryCode = "COD",
                            TwoLetterISOCountryCode = "CD"
                        },
                        new
                        {
                            Id = 83,
                            Name = "Côte d’Ivoire",
                            ThreeLetterISOCountryCode = "CIV",
                            TwoLetterISOCountryCode = "CI"
                        },
                        new
                        {
                            Id = 84,
                            Name = "Cameroon",
                            ThreeLetterISOCountryCode = "CMR",
                            TwoLetterISOCountryCode = "CM"
                        },
                        new
                        {
                            Id = 85,
                            Name = "Haiti",
                            ThreeLetterISOCountryCode = "HTI",
                            TwoLetterISOCountryCode = "HT"
                        },
                        new
                        {
                            Id = 86,
                            Name = "Monaco",
                            ThreeLetterISOCountryCode = "MCO",
                            TwoLetterISOCountryCode = "MC"
                        },
                        new
                        {
                            Id = 87,
                            Name = "Mali",
                            ThreeLetterISOCountryCode = "MLI",
                            TwoLetterISOCountryCode = "ML"
                        },
                        new
                        {
                            Id = 88,
                            Name = "Réunion",
                            ThreeLetterISOCountryCode = "REU",
                            TwoLetterISOCountryCode = "RE"
                        },
                        new
                        {
                            Id = 89,
                            Name = "Netherlands",
                            ThreeLetterISOCountryCode = "NLD",
                            TwoLetterISOCountryCode = "NL"
                        },
                        new
                        {
                            Id = 90,
                            Name = "Israel",
                            ThreeLetterISOCountryCode = "ISR",
                            TwoLetterISOCountryCode = "IL"
                        },
                        new
                        {
                            Id = 91,
                            Name = "Croatia",
                            ThreeLetterISOCountryCode = "HRV",
                            TwoLetterISOCountryCode = "HR"
                        },
                        new
                        {
                            Id = 92,
                            Name = "Hungary",
                            ThreeLetterISOCountryCode = "HUN",
                            TwoLetterISOCountryCode = "HU"
                        },
                        new
                        {
                            Id = 93,
                            Name = "Armenia",
                            ThreeLetterISOCountryCode = "ARM",
                            TwoLetterISOCountryCode = "AM"
                        },
                        new
                        {
                            Id = 94,
                            Name = "Iceland",
                            ThreeLetterISOCountryCode = "ISL",
                            TwoLetterISOCountryCode = "IS"
                        },
                        new
                        {
                            Id = 95,
                            Name = "Italy",
                            ThreeLetterISOCountryCode = "ITA",
                            TwoLetterISOCountryCode = "IT"
                        },
                        new
                        {
                            Id = 96,
                            Name = "Japan",
                            ThreeLetterISOCountryCode = "JPN",
                            TwoLetterISOCountryCode = "JP"
                        },
                        new
                        {
                            Id = 97,
                            Name = "Georgia",
                            ThreeLetterISOCountryCode = "GEO",
                            TwoLetterISOCountryCode = "GE"
                        },
                        new
                        {
                            Id = 98,
                            Name = "Kazakhstan",
                            ThreeLetterISOCountryCode = "KAZ",
                            TwoLetterISOCountryCode = "KZ"
                        },
                        new
                        {
                            Id = 99,
                            Name = "Greenland",
                            ThreeLetterISOCountryCode = "GRL",
                            TwoLetterISOCountryCode = "GL"
                        },
                        new
                        {
                            Id = 100,
                            Name = "Cambodia",
                            ThreeLetterISOCountryCode = "KHM",
                            TwoLetterISOCountryCode = "KH"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Korea",
                            ThreeLetterISOCountryCode = "KOR",
                            TwoLetterISOCountryCode = "KR"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Kyrgyzstan",
                            ThreeLetterISOCountryCode = "KGZ",
                            TwoLetterISOCountryCode = "KG"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Laos",
                            ThreeLetterISOCountryCode = "LAO",
                            TwoLetterISOCountryCode = "LA"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Lithuania",
                            ThreeLetterISOCountryCode = "LTU",
                            TwoLetterISOCountryCode = "LT"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Latvia",
                            ThreeLetterISOCountryCode = "LVA",
                            TwoLetterISOCountryCode = "LV"
                        },
                        new
                        {
                            Id = 106,
                            Name = "North Macedonia",
                            ThreeLetterISOCountryCode = "MKD",
                            TwoLetterISOCountryCode = "MK"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Mongolia",
                            ThreeLetterISOCountryCode = "MNG",
                            TwoLetterISOCountryCode = "MN"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Brunei",
                            ThreeLetterISOCountryCode = "BRN",
                            TwoLetterISOCountryCode = "BN"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Malta",
                            ThreeLetterISOCountryCode = "MLT",
                            TwoLetterISOCountryCode = "MT"
                        },
                        new
                        {
                            Id = 110,
                            Name = "Myanmar",
                            ThreeLetterISOCountryCode = "MMR",
                            TwoLetterISOCountryCode = "MM"
                        },
                        new
                        {
                            Id = 111,
                            Name = "Norway",
                            ThreeLetterISOCountryCode = "NOR",
                            TwoLetterISOCountryCode = "NO"
                        },
                        new
                        {
                            Id = 112,
                            Name = "Nepal",
                            ThreeLetterISOCountryCode = "NPL",
                            TwoLetterISOCountryCode = "NP"
                        },
                        new
                        {
                            Id = 113,
                            Name = "Pakistan",
                            ThreeLetterISOCountryCode = "PAK",
                            TwoLetterISOCountryCode = "PK"
                        },
                        new
                        {
                            Id = 114,
                            Name = "Poland",
                            ThreeLetterISOCountryCode = "POL",
                            TwoLetterISOCountryCode = "PL"
                        },
                        new
                        {
                            Id = 115,
                            Name = "Afghanistan",
                            ThreeLetterISOCountryCode = "AFG",
                            TwoLetterISOCountryCode = "AF"
                        },
                        new
                        {
                            Id = 116,
                            Name = "Brazil",
                            ThreeLetterISOCountryCode = "BRA",
                            TwoLetterISOCountryCode = "BR"
                        },
                        new
                        {
                            Id = 117,
                            Name = "Portugal",
                            ThreeLetterISOCountryCode = "PRT",
                            TwoLetterISOCountryCode = "PT"
                        },
                        new
                        {
                            Id = 118,
                            Name = "Moldova",
                            ThreeLetterISOCountryCode = "MDA",
                            TwoLetterISOCountryCode = "MD"
                        },
                        new
                        {
                            Id = 119,
                            Name = "Romania",
                            ThreeLetterISOCountryCode = "ROU",
                            TwoLetterISOCountryCode = "RO"
                        },
                        new
                        {
                            Id = 120,
                            Name = "Rwanda",
                            ThreeLetterISOCountryCode = "RWA",
                            TwoLetterISOCountryCode = "RW"
                        },
                        new
                        {
                            Id = 121,
                            Name = "Sweden",
                            ThreeLetterISOCountryCode = "SWE",
                            TwoLetterISOCountryCode = "SE"
                        },
                        new
                        {
                            Id = 122,
                            Name = "Sri Lanka",
                            ThreeLetterISOCountryCode = "LKA",
                            TwoLetterISOCountryCode = "LK"
                        },
                        new
                        {
                            Id = 123,
                            Name = "Slovakia",
                            ThreeLetterISOCountryCode = "SVK",
                            TwoLetterISOCountryCode = "SK"
                        },
                        new
                        {
                            Id = 124,
                            Name = "Slovenia",
                            ThreeLetterISOCountryCode = "SVN",
                            TwoLetterISOCountryCode = "SI"
                        },
                        new
                        {
                            Id = 125,
                            Name = "Somalia",
                            ThreeLetterISOCountryCode = "SOM",
                            TwoLetterISOCountryCode = "SO"
                        },
                        new
                        {
                            Id = 126,
                            Name = "Albania",
                            ThreeLetterISOCountryCode = "ALB",
                            TwoLetterISOCountryCode = "AL"
                        },
                        new
                        {
                            Id = 127,
                            Name = "Montenegro",
                            ThreeLetterISOCountryCode = "MNE",
                            TwoLetterISOCountryCode = "ME"
                        },
                        new
                        {
                            Id = 128,
                            Name = "Serbia",
                            ThreeLetterISOCountryCode = "SRB",
                            TwoLetterISOCountryCode = "RS"
                        },
                        new
                        {
                            Id = 129,
                            Name = "Kenya",
                            ThreeLetterISOCountryCode = "KEN",
                            TwoLetterISOCountryCode = "KE"
                        },
                        new
                        {
                            Id = 130,
                            Name = "Thailand",
                            ThreeLetterISOCountryCode = "THA",
                            TwoLetterISOCountryCode = "TH"
                        },
                        new
                        {
                            Id = 131,
                            Name = "Eritrea",
                            ThreeLetterISOCountryCode = "ERI",
                            TwoLetterISOCountryCode = "ER"
                        },
                        new
                        {
                            Id = 132,
                            Name = "Turkmenistan",
                            ThreeLetterISOCountryCode = "TKM",
                            TwoLetterISOCountryCode = "TM"
                        },
                        new
                        {
                            Id = 133,
                            Name = "Botswana",
                            ThreeLetterISOCountryCode = "BWA",
                            TwoLetterISOCountryCode = "BW"
                        },
                        new
                        {
                            Id = 134,
                            Name = "Turkey",
                            ThreeLetterISOCountryCode = "TUR",
                            TwoLetterISOCountryCode = "TR"
                        },
                        new
                        {
                            Id = 135,
                            Name = "Ukraine",
                            ThreeLetterISOCountryCode = "UKR",
                            TwoLetterISOCountryCode = "UA"
                        },
                        new
                        {
                            Id = 136,
                            Name = "Uzbekistan",
                            ThreeLetterISOCountryCode = "UZB",
                            TwoLetterISOCountryCode = "UZ"
                        },
                        new
                        {
                            Id = 137,
                            Name = "Vietnam",
                            ThreeLetterISOCountryCode = "VNM",
                            TwoLetterISOCountryCode = "VN"
                        },
                        new
                        {
                            Id = 138,
                            Name = "World",
                            ThreeLetterISOCountryCode = "",
                            TwoLetterISOCountryCode = "001"
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AircraftId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<int>("ArrivalAirportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("AvailableSeats")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DepartureAirportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("AirlineId");

                    b.HasIndex("ArrivalAirportId");

                    b.HasIndex("DepartureAirportId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AircraftId = "327senj",
                            AirlineId = 1,
                            ArrivalAirportId = 1,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 5, 45, 3, 948, DateTimeKind.Local).AddTicks(6728),
                            AvailableSeats = 300L,
                            BasePrice = 1000m,
                            DepartureAirportId = 2,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6659)
                        },
                        new
                        {
                            Id = 2,
                            AircraftId = "34u4ff7",
                            AirlineId = 5,
                            ArrivalAirportId = 4,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 6, 45, 3, 948, DateTimeKind.Local).AddTicks(6753),
                            AvailableSeats = 454L,
                            BasePrice = 100m,
                            DepartureAirportId = 1,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6744)
                        },
                        new
                        {
                            Id = 3,
                            AircraftId = "398f733",
                            AirlineId = 1,
                            ArrivalAirportId = 10,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 13, 45, 3, 948, DateTimeKind.Local).AddTicks(6793),
                            AvailableSeats = 46L,
                            BasePrice = 500m,
                            DepartureAirportId = 4,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6779)
                        },
                        new
                        {
                            Id = 4,
                            AircraftId = "838f823",
                            AirlineId = 3,
                            ArrivalAirportId = 4,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 5, 15, 3, 948, DateTimeKind.Local).AddTicks(6818),
                            AvailableSeats = 747L,
                            BasePrice = 2100m,
                            DepartureAirportId = 5,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6810)
                        },
                        new
                        {
                            Id = 5,
                            AircraftId = "34u4ff7",
                            AirlineId = 5,
                            ArrivalAirportId = 2,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 23, 45, 3, 948, DateTimeKind.Local).AddTicks(6835),
                            AvailableSeats = 454L,
                            BasePrice = 540m,
                            DepartureAirportId = 7,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6828)
                        },
                        new
                        {
                            Id = 6,
                            AircraftId = "weuihf7",
                            AirlineId = 1,
                            ArrivalAirportId = 7,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 4, 45, 3, 948, DateTimeKind.Local).AddTicks(6861),
                            AvailableSeats = 100L,
                            BasePrice = 1200m,
                            DepartureAirportId = 5,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6849)
                        },
                        new
                        {
                            Id = 7,
                            AircraftId = "3298f7",
                            AirlineId = 2,
                            ArrivalAirportId = 1,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 5, 45, 3, 948, DateTimeKind.Local).AddTicks(6889),
                            AvailableSeats = 78L,
                            BasePrice = 1050m,
                            DepartureAirportId = 6,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6880)
                        },
                        new
                        {
                            Id = 8,
                            AircraftId = "34984f",
                            AirlineId = 5,
                            ArrivalAirportId = 10,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 5, 45, 3, 948, DateTimeKind.Local).AddTicks(6924),
                            AvailableSeats = 611L,
                            BasePrice = 1007m,
                            DepartureAirportId = 9,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6899)
                        },
                        new
                        {
                            Id = 9,
                            AircraftId = "3408fj8",
                            AirlineId = 4,
                            ArrivalAirportId = 2,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 12, 45, 3, 948, DateTimeKind.Local).AddTicks(6943),
                            AvailableSeats = 300L,
                            BasePrice = 450m,
                            DepartureAirportId = 3,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6934)
                        },
                        new
                        {
                            Id = 10,
                            AircraftId = "weuihf7",
                            AirlineId = 1,
                            ArrivalAirportId = 9,
                            ArrivalDateTime = new DateTime(2023, 7, 15, 15, 45, 3, 948, DateTimeKind.Local).AddTicks(6961),
                            AvailableSeats = 100L,
                            BasePrice = 7100m,
                            DepartureAirportId = 8,
                            DepartureDateTime = new DateTime(2023, 7, 15, 3, 45, 3, 948, DateTimeKind.Local).AddTicks(6953)
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TotalPrice = 2400m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            TotalPrice = 2200m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("PersonId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 12,
                            PassportNumber = "FV679780",
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 9,
                            PassportNumber = "KF784839",
                            PersonId = 3
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 23,
                            PassportNumber = "FH567478",
                            PersonId = 7
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 68,
                            PassportNumber = "NF547849",
                            PersonId = 5
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            PassportNumber = "BJ564700",
                            PersonId = 10
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ali",
                            LastName = "Baba"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Albert",
                            LastName = "Sohlmann"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Odin",
                            LastName = "Hale"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Ivor",
                            LastName = "Watkins"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Zena",
                            LastName = "Ellis"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Isac",
                            LastName = "Ericsson"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Max",
                            LastName = "Sundqvist"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Edward",
                            LastName = "Johansson"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Arne",
                            LastName = "Akerman"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Amund",
                            LastName = "Erling"
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Travels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1,
                            PassengerId = 1,
                            Price = 1200m
                        },
                        new
                        {
                            Id = 2,
                            ArrivalDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1,
                            PassengerId = 2,
                            Price = 1200m
                        },
                        new
                        {
                            Id = 3,
                            ArrivalDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2,
                            PassengerId = 2,
                            Price = 2200m
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassengerId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PassengerId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "some1@mail.com",
                            PassengerId = 1,
                            Password = "3ygr3g8"
                        },
                        new
                        {
                            Id = 2,
                            Email = "some2@mail.com",
                            PassengerId = 2,
                            Password = "siejfei"
                        },
                        new
                        {
                            Id = 3,
                            Email = "some3@mail.com",
                            PassengerId = 3,
                            Password = "3298hfw"
                        },
                        new
                        {
                            Id = 4,
                            Email = "some4@mail.com",
                            PassengerId = 4,
                            Password = "34u9g2"
                        },
                        new
                        {
                            Id = 5,
                            Email = "some5@mail.com",
                            Password = "3209rfh"
                        });
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Aircraft", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.Airline", "Airline")
                        .WithMany("Aircrafts")
                        .HasForeignKey("AirlineId")
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Airport", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Booking", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketPurchaseService.Models.Travel", "Travel")
                        .WithMany("Bookings")
                        .HasForeignKey("TravelId")
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Travel");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Flight", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.Aircraft", "Aircraft")
                        .WithMany("Flights")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketPurchaseService.Models.Airline", "Airline")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineId")
                        .IsRequired();

                    b.HasOne("TicketPurchaseService.Models.Airport", "ArrivalAirport")
                        .WithMany("Flights")
                        .HasForeignKey("ArrivalAirportId")
                        .IsRequired();

                    b.HasOne("TicketPurchaseService.Models.Airport", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Airline");

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Order", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Passenger", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.Country", "Citizenship")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketPurchaseService.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizenship");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Travel", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.Order", "Order")
                        .WithMany("Travels")
                        .HasForeignKey("OrderId")
                        .IsRequired();

                    b.HasOne("TicketPurchaseService.Models.Passenger", "Passenger")
                        .WithMany("Travels")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.User", b =>
                {
                    b.HasOne("TicketPurchaseService.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Aircraft", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Airline", b =>
                {
                    b.Navigation("Aircrafts");

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Airport", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Order", b =>
                {
                    b.Navigation("Travels");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Passenger", b =>
                {
                    b.Navigation("Travels");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.Travel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TicketPurchaseService.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
